apiVersion: apps/v1
kind: Deployment
metadata:
  name:  "{{ template "postgres.name" . }}"
  namespace: "{{ template "zrc.namespace" . }}"
  labels:
    {{- include "zrc.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 8 }}
  template:
    metadata:
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.images.imageRepo}}:{{ .Values.postgres.images.tag }}
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ template "postgres.secretName" . }}"
                  key: {{ .Values.secret.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ template "postgres.secretName" . }}"
                  key: {{ .Values.secret.password }}
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: postgis-pgdata
      volumes:
        - name: postgis-pgdata
          persistentVolumeClaim:
            claimName: postgres-pvc
